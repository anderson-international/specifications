{
  "metadata": {
    "timestamp": "2025-08-03T15:15:56.009Z",
    "totalFiles": 2,
    "passedFiles": 0,
    "failedFiles": 2,
    "averageRisk": 3
  },
  "summary": {
    "blockingViolations": 0,
    "eslintErrors": 0,
    "typescriptIssues": 3,
    "oversizedFiles": 1
  },
  "fileResults": {
    "lib\\services\\enumService.ts": {
      "filePath": "lib\\services\\enumService.ts",
      "timestamp": "2025-08-03T15:15:53.483Z",
      "size": {
        "lines": 101,
        "limit": 100,
        "type": "services",
        "status": "FAIL",
        "percentage": 101
      },
      "comments": {
        "violations": [
          {
            "type": "jsdoc",
            "line": 10,
            "content": "/**"
          },
          {
            "type": "jsdoc",
            "line": 11,
            "content": "* Local service-layer error with HTTP status mapping"
          }
        ],
        "count": 2,
        "status": "FAIL"
      },
      "react": {
        "hasReactImport": false,
        "hasUseCallback": false,
        "hasUseMemo": false,
        "hasUseEffect": false,
        "hasHooks": false,
        "issues": []
      },
      "consoleErrors": {
        "violations": [],
        "count": 0,
        "status": "PASS"
      },
      "eslint": {
        "errors": [],
        "warnings": []
      },
      "typescript": {
        "totalFunctions": 13,
        "missingReturnTypes": 2,
        "hasExplicitTypes": false,
        "status": "FAIL"
      },
      "fallbackData": {
        "violations": [],
        "count": 0,
        "status": "PASS"
      },
      "overallStatus": "FAIL",
      "contextGuidance": {
        "riskLevel": 4,
        "riskGuidance": {
          "1-3": "Safe for mechanical/batch fixes",
          "4-6": "Review carefully before fixing",
          "7-8": "Analyze thoroughly, seek approval for complex changes",
          "9-10": "High complexity - require explicit approval before proceeding"
        },
        "priorities": [
          {
            "type": "TYPESCRIPT_TYPES",
            "count": 2,
            "recommendation": "Add explicit return type annotations. Consider type reuse opportunities before creating new types."
          },
          {
            "type": "FILE_SIZE",
            "overage": 1,
            "recommendation": "File exceeds 100 line limit by 1 lines. Consider refactoring into smaller, focused modules."
          }
        ],
        "recommendations": [],
        "contextDocs": [
          "/tech-code-quality"
        ]
      }
    },
    "hooks\\useProducts.ts": {
      "filePath": "hooks\\useProducts.ts",
      "timestamp": "2025-08-03T15:15:56.009Z",
      "size": {
        "lines": 96,
        "limit": 100,
        "type": "hooks",
        "status": "PASS",
        "percentage": 96
      },
      "comments": {
        "violations": [],
        "count": 0,
        "status": "PASS"
      },
      "react": {
        "hasReactImport": false,
        "hasUseCallback": true,
        "hasUseMemo": true,
        "hasUseEffect": true,
        "hasHooks": true,
        "issues": []
      },
      "consoleErrors": {
        "violations": [],
        "count": 0,
        "status": "PASS"
      },
      "eslint": {
        "errors": [],
        "warnings": [
          {
            "line": 57,
            "column": 6,
            "message": "React Hook useCallback has a missing dependency: 'retryCount'. Either include it or remove the dependency array.",
            "ruleId": "react-hooks/exhaustive-deps"
          }
        ]
      },
      "typescript": {
        "totalFunctions": 6,
        "missingReturnTypes": 1,
        "hasExplicitTypes": false,
        "status": "FAIL"
      },
      "fallbackData": {
        "violations": [],
        "count": 0,
        "status": "PASS"
      },
      "overallStatus": "FAIL",
      "contextGuidance": {
        "riskLevel": 2,
        "riskGuidance": {
          "1-3": "Safe for mechanical/batch fixes",
          "4-6": "Review carefully before fixing",
          "7-8": "Analyze thoroughly, seek approval for complex changes",
          "9-10": "High complexity - require explicit approval before proceeding"
        },
        "priorities": [
          {
            "type": "TYPESCRIPT_TYPES",
            "count": 1,
            "recommendation": "Add explicit return type annotations. Consider type reuse opportunities before creating new types."
          }
        ],
        "recommendations": [],
        "contextDocs": [
          "/tech-code-quality"
        ]
      }
    }
  },
  "batchGuidance": {
    "recommendedOrder": [
      {
        "phase": "ALL_VIOLATIONS",
        "files": [
          "lib\\services\\enumService.ts",
          "hooks\\useProducts.ts"
        ],
        "guidance": "Fix ALL violations. Start with fail-fast issues (fallback data, console errors) as they mask errors and prevent proper debugging. Then address remaining violations by risk level."
      }
    ],
    "contextLoading": [],
    "riskThresholds": {
      "lowRisk": [
        {
          "filePath": "hooks\\useProducts.ts",
          "timestamp": "2025-08-03T15:15:56.009Z",
          "size": {
            "lines": 96,
            "limit": 100,
            "type": "hooks",
            "status": "PASS",
            "percentage": 96
          },
          "comments": {
            "violations": [],
            "count": 0,
            "status": "PASS"
          },
          "react": {
            "hasReactImport": false,
            "hasUseCallback": true,
            "hasUseMemo": true,
            "hasUseEffect": true,
            "hasHooks": true,
            "issues": []
          },
          "consoleErrors": {
            "violations": [],
            "count": 0,
            "status": "PASS"
          },
          "eslint": {
            "errors": [],
            "warnings": [
              {
                "line": 57,
                "column": 6,
                "message": "React Hook useCallback has a missing dependency: 'retryCount'. Either include it or remove the dependency array.",
                "ruleId": "react-hooks/exhaustive-deps"
              }
            ]
          },
          "typescript": {
            "totalFunctions": 6,
            "missingReturnTypes": 1,
            "hasExplicitTypes": false,
            "status": "FAIL"
          },
          "fallbackData": {
            "violations": [],
            "count": 0,
            "status": "PASS"
          },
          "overallStatus": "FAIL",
          "contextGuidance": {
            "riskLevel": 2,
            "riskGuidance": {
              "1-3": "Safe for mechanical/batch fixes",
              "4-6": "Review carefully before fixing",
              "7-8": "Analyze thoroughly, seek approval for complex changes",
              "9-10": "High complexity - require explicit approval before proceeding"
            },
            "priorities": [
              {
                "type": "TYPESCRIPT_TYPES",
                "count": 1,
                "recommendation": "Add explicit return type annotations. Consider type reuse opportunities before creating new types."
              }
            ],
            "recommendations": [],
            "contextDocs": [
              "/tech-code-quality"
            ]
          }
        }
      ],
      "mediumRisk": [
        {
          "filePath": "lib\\services\\enumService.ts",
          "timestamp": "2025-08-03T15:15:53.483Z",
          "size": {
            "lines": 101,
            "limit": 100,
            "type": "services",
            "status": "FAIL",
            "percentage": 101
          },
          "comments": {
            "violations": [
              {
                "type": "jsdoc",
                "line": 10,
                "content": "/**"
              },
              {
                "type": "jsdoc",
                "line": 11,
                "content": "* Local service-layer error with HTTP status mapping"
              }
            ],
            "count": 2,
            "status": "FAIL"
          },
          "react": {
            "hasReactImport": false,
            "hasUseCallback": false,
            "hasUseMemo": false,
            "hasUseEffect": false,
            "hasHooks": false,
            "issues": []
          },
          "consoleErrors": {
            "violations": [],
            "count": 0,
            "status": "PASS"
          },
          "eslint": {
            "errors": [],
            "warnings": []
          },
          "typescript": {
            "totalFunctions": 13,
            "missingReturnTypes": 2,
            "hasExplicitTypes": false,
            "status": "FAIL"
          },
          "fallbackData": {
            "violations": [],
            "count": 0,
            "status": "PASS"
          },
          "overallStatus": "FAIL",
          "contextGuidance": {
            "riskLevel": 4,
            "riskGuidance": {
              "1-3": "Safe for mechanical/batch fixes",
              "4-6": "Review carefully before fixing",
              "7-8": "Analyze thoroughly, seek approval for complex changes",
              "9-10": "High complexity - require explicit approval before proceeding"
            },
            "priorities": [
              {
                "type": "TYPESCRIPT_TYPES",
                "count": 2,
                "recommendation": "Add explicit return type annotations. Consider type reuse opportunities before creating new types."
              },
              {
                "type": "FILE_SIZE",
                "overage": 1,
                "recommendation": "File exceeds 100 line limit by 1 lines. Consider refactoring into smaller, focused modules."
              }
            ],
            "recommendations": [],
            "contextDocs": [
              "/tech-code-quality"
            ]
          }
        }
      ],
      "highRisk": []
    }
  }
}